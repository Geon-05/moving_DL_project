데이터셋
image_size : 128*128(all)
tain 0.6 / val 0.24 / test 0.16
total : 7491 / paper : 2493, rock : 2359, scissors : 2639
situation : 4

모델셋
model = models.Sequential()
model.add(layers.Input(shape=(128, 128, 3)))  # 입력 크기 지정
model.add(layers.Conv2D(32, (3, 3), activation='relu'))
model.add(keras.layers.MaxPool2D(2,2))
model.add(keras.layers.Conv2D(64, (3,3), activation='relu'))
model.add(keras.layers.BatchNormalization())
model.add(keras.layers.MaxPooling2D((2,2)))
model.add(keras.layers.Dropout(0.5))
model.add(keras.layers.Flatten())
model.add(keras.layers.Dense(128, activation='relu', kernel_regularizer=keras.regularizers.l2(0.1)))
model.add(keras.layers.Dropout(0.5))
model.add(keras.layers.Dense(3, activation='softmax'))
model.summary()

증강셋
사용하지 않음

하이퍼
image_size : 128*128
learning_rate : 0.00001
epochs : 3

- 트레인
Epoch 1/3
141/141 ━━━━━━━━━━━━━━━━━━━━ 14s 94ms/step - accuracy: 0.9211 - loss: 1.8424 - val_accuracy: 0.9833 - val_loss: 1.6528
Epoch 2/3
141/141 ━━━━━━━━━━━━━━━━━━━━ 13s 94ms/step - accuracy: 0.9457 - loss: 1.7204 - val_accuracy: 0.9889 - val_loss: 1.5840
Epoch 3/3
141/141 ━━━━━━━━━━━━━━━━━━━━ 13s 94ms/step - accuracy: 0.9581 - loss: 1.6451 - val_accuracy: 0.9917 - val_loss: 1.5307

- 테스트
38/38 - 1s - 21ms/step - accuracy: 0.9900 - loss: 1.5370
test_loss : 1.5370079278945923
test_accuracy : 0.9899916648864746
